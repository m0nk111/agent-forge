# Polling Service Configuration
# This file configures the autonomous GitHub issue polling service

# Polling interval in seconds (default: 300 = 5 minutes)
interval_seconds: 300

# GitHub configuration
github:
  # Bot username for polling and general operations (not coding/dev)
  # m0nk111-post handles issue detection, PR creation, comments
  # m0nk111-qwen-agent (codeagent) only handles git commits/pushes
  username: "m0nk111-post"
  
  # GitHub token (uses BOT_GITHUB_TOKEN or GITHUB_TOKEN env var if not specified)
  # token: "ghp_..."  # Uncomment and set if not using environment variable

# Repositories to monitor
repositories:
  - "m0nk111/stepperheightcontrol"
  - "m0nk111/agent-forge"
  - "m0nk111/Mycodo"
  - "m0nk111/caramba"

# Labels to watch for (issues must have at least one of these labels)
watch_labels:
  - "agent-ready"      # Manual trigger: add this label when issue is ready for agent
  - "auto-assign"      # Automatic: agent picks up immediately when assigned

# Maximum concurrent issues the agent can work on
max_concurrent_issues: 3

# Claim timeout in minutes (how long before another agent can claim an issue)
# Default: 60 minutes (1 hour)
# Increased to 24 hours to prevent spam when workflow fails
claim_timeout_minutes: 1440

# PR Monitoring & Auto-Review (NEW)
# Monitor pull requests and trigger reviewer agent
pr_monitoring:
  enabled: true
  # Check for new PRs every N seconds (default: 600 = 10 minutes)
  interval_seconds: 600
  # Auto-review PRs from these users (whitelist)
  auto_review_users:
    - "m0nk111-post"       # Bot agent PRs
    - "m0nk111-coder1"     # Primary GPT-5 coder
    - "m0nk111-coder2"     # Primary GPT-4o coder
    - "m0nk111-qwen-agent" # Reserve/fallback Qwen coder
  # Skip auto-review for PRs from these trusted users
  skip_review_users:
    - "m0nk111"  # Admin account (trusted)
  # Only auto-review PRs with these labels (empty = all PRs)
  review_labels: []
  # Reviewer selection strategy:
  # - "dedicated": Use dedicated reviewer_agent_id (single reviewer)
  # - "round-robin": Rotate between available code agents (avoid self-review)
  # - "all": All code agents review (except author)
  strategy: "round-robin"
  # Reviewer agent ID (used when strategy="dedicated")
  reviewer_agent_id: "reviewer-agent"
  # Available reviewer agents (used for round-robin/all strategies)
  # Each code agent can review, but won't review their own PRs
  # Priority order: reviewer > coder1 > coder2 > qwen (reserve)
  reviewer_agents:
    - agent_id: "reviewer-agent"
      username: "m0nk111-reviewer"
      llm_model: "gpt-5-chat-latest"  # Dedicated reviewer (always available)
    - agent_id: "coder-agent-1"
      username: "m0nk111-coder1"
      llm_model: "gpt-5-chat-latest"  # Primary GPT-5 coder (can review)
    - agent_id: "coder-agent-2"
      username: "m0nk111-coder2"
      llm_model: "gpt-4o"  # Primary GPT-4o coder (can review)
    - agent_id: "coder-agent-qwen"
      username: "m0nk111-qwen-agent"
      llm_model: "qwen-2.5-coder-32b"  # Reserve/fallback coder (can review)

# Issue Opener Integration (NEW)
# Automatically process new issues with issue-opener agent
issue_opener:
  enabled: true
  # Trigger issue-opener for issues with these labels
  trigger_labels:
    - "good first issue"
    - "enhancement"
    - "feature"
  # Skip issues with these labels
  skip_labels:
    - "question"
    - "discussion"
    - "needs-design"
  # Issue opener agent ID
  agent_id: "issue-opener-agent"

# State file path (tracks processing issues)
state_file: "polling_state.json"

# Logging configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  file: "polling_service.log"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Advanced settings
advanced:
  # Retry configuration
  max_retries: 3
  retry_delay_seconds: 60
  
  # GitHub API rate limiting
  respect_rate_limits: true
  api_requests_per_minute: 60
  
  # Issue filters
  ignore_labels:
    - "wontfix"
    - "duplicate"
    - "invalid"
  
  # Minimum issue age before processing (seconds)
  # Prevents picking up issues that are still being edited
  min_issue_age_seconds: 60
